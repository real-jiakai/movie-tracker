---
interface Props {
  years: number[];
  currentYear: number;
  movieCounts: Record<number, number>;
}

const { years, currentYear, movieCounts } = Astro.props;
---

<nav class="py-4 bg-gray-50">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-center flex-wrap gap-2">
      {years.map(year => {
        const count = movieCounts[year] || 0;
        const isActive = year === currentYear;
        return (
          <a
            href={`/${year}`}
            class={`
              px-4 py-2 rounded-full text-sm transition-all duration-300
              ${isActive 
                ? 'bg-blue-600 text-white hover:bg-blue-700' 
                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}
            `}
          >
            {year}
            <span class="ml-1 text-xs opacity-75">
              {count}
            </span>
          </a>
        );
      })}
    </div>
  </div>
</nav>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>
